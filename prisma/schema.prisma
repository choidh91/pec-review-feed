// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Review {
  id        Int     @id @default(autoincrement())
  author    User    @relation(fields: [userId], references: [id])
  userId    Int
  content   String
  photo     String?
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  likes     Like[]
}

model Like {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Review @relation(fields: [reviewId], references: [id], onDelete: Cascade)
  userId   Int
  reviewId Int

  @@id(name: "id", [userId, reviewId])
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  view_count Int      @default(0)
  review     Review[]
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]

  users1 User[] @relation("CategoryToUser1")
  users2 User[] @relation("CategoryToUser2")
  users3 User[] @relation("CategoryToUser3")
}

model User {
  id                       Int       @id @default(autoincrement())
  name                     String
  recent_view_category1_id Int?
  recent_view_category2_id Int?
  recent_view_category3_id Int?
  recent_view_category1    Category? @relation("CategoryToUser1", fields: [recent_view_category1_id], references: [id])
  recent_view_category2    Category? @relation("CategoryToUser2", fields: [recent_view_category2_id], references: [id])
  recent_view_category3    Category? @relation("CategoryToUser3", fields: [recent_view_category3_id], references: [id])
  Review                   Review[]
  likes                    Like[]
}
